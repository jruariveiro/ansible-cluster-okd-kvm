---

- name: cloud-init | Verificar se existe uma chave ssh no home do usuário
  stat:
    path: /home/{{ ansible_user }}/.ssh/id_rsa
  become: false
  register: ssh_key_exist

- name: cloud-init | Gerar uma chave ssh no home do usuário  
  shell: >
     yes y | ssh-keygen -t rsa -q -N "" -f /home/{{ ansible_user }}/.ssh/id_rsa
  become: false
  when: (not ssh_key_exist.stat.exists) 

- name: cloud-init | Gerar o arquivo user-data para imagem de boot
  template: 
    src: "cloud-init/user-data.j2"
    dest: "{{ pool.path }}/{{ pool.name }}/user-data"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0655    

- name: cloud-init | Gerar o arquivo meta-data para imagem de boot
  copy: 
    dest: "{{ pool.path }}/{{ pool.name }}/meta-data"
    content: |
      instance-id: '{{ vm_base_machine.name }}'
      hostname: '{{ vm_base_machine.hostname }}.{{ network.domain }}'
      local-hostname: '{{ vm_base_machine.hostname }}'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0655

- name: cloud-init | Gerar a imagem boot.iso do cloud-init
  command: >
    genisoimage -output 
    '{{ pool.path }}/{{ pool.name }}/boot.iso' -volid cidata -joliet -rock 
    '{{ pool.path }}/{{ pool.name }}/user-data' 
    '{{ pool.path }}/{{ pool.name }}/meta-data' 

- name: cloud-init | Gerar o disco principal da VM Base
  command: > 
    qemu-img create -b {{ vm_base_image_path }}/{{ vm_base_image_name }} 
    -f {{ item.format }} {{ pool.path }}/{{ pool.name }}/{{ item.name }}.{{ item.format }} {{ item.capacity }}
  with_items: "{{ volumes }}"
  when: (item.device == 'disk')
